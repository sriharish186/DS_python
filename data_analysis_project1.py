# -*- coding: utf-8 -*-
"""Data_Analysis_project1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G-Q1-KSQbjnlxU1OJf8UpDDgX-iwXU-p
"""

# Create a pandas Series from a list containing the elements [10, 20, 30, 40, 50].

import pandas as pd

a = pd.Series([10, 20, 30, 40, 50])

a

# Create a pandas DataFrame from a dictionary with the following key-value pairs:

dict1 = {'Name': ['John', 'Alice', 'Bob'], 'Age': [25, 30, 35], 'City': ['New York', 'London', 'Paris']}

df = pd.DataFrame(dict1,index=[i for i in range(1,4)])

df

a = [i for i in range(1,100)]
a

df = pd.read_csv('data.csv')

df

# Select the first 5 rows of a DataFrame named "df".

df.loc[0:5] # loc doesnt exclude the second number, loc - locate

# Select the 'Duration' and 'Pulse' columns of a DataFrame named "df".

df['Duration','Pulse']

df

df

df['Gender'] = ['Male','Female','Male']

# Filter the DataFrame to only include rows where the 'Gender' column is 'Female'.

df2 = df[df['Gender']=='Female']

df2

# Group the DataFrame by the 'Country' column and count the number of occurrences for each country.

df['Country'] = ['USA','UK','France']

df.groupby('Country')['Country'].count()

# Sort the DataFrame based on multiple columns, first by 'Age' in ascending order,
# and then by 'Salary' in descending order.

df

df['Salary'] = [50000,60000,70000]

df2 = df.sort_values(['Age', 'Salary'], ascending=[True, False])

new_row = pd.Series(['Jay', 25, 'New York','USA','Male',55000], index=df.columns)

df = df.append(new_row,ignore_index=True)

df = df.drop(3)

df2

df['Sales']=[23,25,35,40]

df

df['Sales'] > 30

df['Sales'] =  df['Sales']  + 5

df

df['Sales'] = 30

df

df.info()

df['Sales'] = [23,25,35,40]

df

avg = df['Sales'].mean()
avg

df[df['Sales']>avg]

# Plot a simple line graph with the following data:

x = [1, 2, 3, 4, 5]
y = [2, 4, 6, 8, 10]

import matplotlib.pyplot as plt

plt.plot(x, y, "o k")
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Simple Line Graph')
plt.show()

# Create a scatter plot using the following data and
# customize it by setting labels for the x and y axes and adding a title:

plt.scatter(x, y)
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Scatter Plot')0
plt.show()

x = [1, 2, 3, 4, 5]
y1 = [2, 4, 6, 8, 10]
y2 = [1, 3, 5, 7, 9]

plt.plot(x, y1, linestyle='-', label='Line 1')
plt.plot(x, y2, 'r', linestyle='--', label='Line 2')
plt.xlabel('X')
plt.ylabel('Y')
plt.title('Two Lines Plot')
plt.legend()
plt.show()

# Create a bar chart using the following data
# and customize it by setting labels for the x and y axes, adding a title, and adjusting the color of the bars:

x = ['A', 'K', 'B', 'C', 'D', 'E']
y = [10,8, 7, 5, 8, 12]

plt.bar(x, y)
plt.xlabel('Categories')
plt.ylabel('Values')
plt.title('Bar Chart')
plt.show()

# Plot a histogram using the following data and customize it with appropriate labels and a title:

data = [1, 1, 1, 2, 3, 3, 4, 5, 5, 5, 5, 6, 7, 8, 9, 9, 10]

plt.hist(data, bins=9, color='purple')
plt.xlabel('Values')
plt.ylabel('Frequency')
plt.title('Histogram')
plt.show()